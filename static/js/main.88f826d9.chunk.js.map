{"version":3,"sources":["components/Pagination/Pagination.js","App.js","index.js"],"names":["Pagination","currentPage","perPage","totalItems","onPageChange","withInfo","totalPages","Math","ceil","isActive","page","generatedPages","Array","keys","map","i","lastPage","length","isDisableNextButton","isDisablePreviousButton","aria-label","className","type","onClick","disabled","key","defaultProps","React","memo","optionToChoseItemsCountPerPage","App","state","itemsPerPage","changePage","setState","changeItemsCount","e","target","name","value","this","firstItem","lastItem","min","info","onChange","itemsCount","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88f826d9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({\n  currentPage,\n  perPage,\n  totalItems,\n  onPageChange,\n  withInfo,\n}) => {\n  const totalPages = Math.ceil(totalItems / perPage);\n\n  const isActive = page => (\n    currentPage === page ? 'btn btn-primary' : 'btn btn-outline-primary'\n  );\n\n  const generatedPages = [...Array(totalPages).keys()].map(i => i + 1);\n  const lastPage = generatedPages.length;\n\n  const isDisableNextButton = currentPage === generatedPages.length;\n  const isDisablePreviousButton = currentPage === 1;\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      {withInfo && <p>{withInfo}</p>}\n      <ul className=\"pagination\">\n        <li className=\"page-item\">\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            onClick={() => onPageChange('Previous')}\n            disabled={isDisablePreviousButton}\n          >\n            Previous\n          </button>\n        </li>\n\n        <li className=\"page-item\">\n          <button\n            type=\"button\"\n            className={isActive(1)}\n            onClick={() => onPageChange(1)}\n          >\n            1\n          </button>\n        </li>\n\n        {currentPage > 3 && (\n          <li className=\"page-item\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary\"\n              disabled\n            >\n              ...\n            </button>\n          </li>\n        )}\n\n        {generatedPages.map((page) => {\n          if (page === currentPage\n            || page === currentPage + 1\n            || page === currentPage - 1) {\n            if (page === 1\n              || page === lastPage) {\n              return null;\n            }\n\n            return (\n              <li key={page} className=\"page-item\">\n                <button\n                  type=\"button\"\n                  className={isActive(page)}\n                  onClick={() => onPageChange(page)}\n                >\n                  {page}\n                </button>\n              </li>\n            );\n          }\n\n          return null;\n        })\n        }\n\n        {currentPage < lastPage - 2 && (\n          <li className=\"page-item\">\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary\"\n              disabled\n            >\n              ...\n            </button>\n          </li>\n        )}\n\n        {totalItems > perPage && (\n          <li className=\"page-item\">\n            <button\n              type=\"button\"\n              className={isActive(lastPage)}\n              onClick={() => onPageChange(lastPage)}\n            >\n              {lastPage}\n            </button>\n          </li>\n        )}\n\n        <li className=\"page-item\">\n          <button\n            type=\"button\"\n            className=\"btn btn-outline-primary\"\n            onClick={() => onPageChange('Next')}\n            disabled={isDisableNextButton}\n          >\n            Next\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  totalItems: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  withInfo: PropTypes.string,\n};\n\nPagination.defaultProps = {\n  withInfo: '',\n};\n\nexport default React.memo(Pagination);\n","import React, { PureComponent } from 'react';\nimport './App.css';\nimport Pagination from './components/Pagination/Pagination';\n\nconst optionToChoseItemsCountPerPage = [3, 5, 10, 20];\n\nclass App extends PureComponent {\n  state = {\n    currentPage: 1,\n    itemsPerPage: 5,\n    totalItems: 42,\n  }\n\n  changePage = (page) => {\n    if (page === 'Previous' || page === 'Next') {\n      this.setState(state => ({\n        currentPage: page === 'Previous'\n          ? state.currentPage - 1\n          : state.currentPage + 1,\n      }));\n\n      return;\n    }\n\n    this.setState({\n      currentPage: page,\n    });\n  }\n\n  changeItemsCount = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      currentPage: 1,\n      [name]: +value,\n    });\n  }\n\n  render() {\n    const { currentPage, itemsPerPage, totalItems } = this.state;\n    const firstItem = (currentPage - 1) * itemsPerPage + 1;\n    const lastItem = Math.min((currentPage * itemsPerPage), totalItems);\n    const info = `${firstItem} - ${lastItem} of ${totalItems}`;\n\n    return (\n      <div className=\"pl-3\">\n        <h1>{`Current Page ${currentPage}`}</h1>\n        <label>\n          Choose total items\n          <input\n            name=\"totalItems\"\n            className=\"form-control\"\n            type=\"number\"\n            value={totalItems}\n            onChange={this.changeItemsCount}\n          />\n        </label>\n\n        <label>\n          set number of items per page\n          <select\n            name=\"itemsPerPage\"\n            value={itemsPerPage}\n            onChange={this.changeItemsCount}\n            className=\"form-control\"\n          >\n            {optionToChoseItemsCountPerPage.map(itemsCount => (\n              <option\n                key={itemsCount}\n                value={itemsCount}\n              >\n                {itemsCount}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <Pagination\n          onPageChange={this.changePage}\n          currentPage={currentPage}\n          perPage={itemsPerPage}\n          totalItems={totalItems}\n          withInfo={info}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}